name: CI

on:
  push:
  schedule:
  - cron:  '0 1 * * *' # Every day at 1am.

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ZEPHYR_BASE: /home/runner/work/firefly_zephyr/firefly_zephyr/zephyrproject/zephyr
      ZEPHYR_TOOLCHAIN_VARIANT: zephyr
      ZEPHYR_SDK_INSTALL_DIR: /home/runner/work/firefly_zephyr/firefly_zephyr/zephyr-sdk-0.11.1
    steps:
      - name: Get CMake 3.19.2
        uses: lukka/get-cmake@v3.19.2
      - uses: actions/checkout@v1
      - run: sudo apt-get update && sudo apt-get install --no-install-recommends gcc-arm-none-eabi git cmake ninja-build gperf ccache dfu-util device-tree-compiler wget python3-pip python3-setuptools python3-tk python3-wheel xz-utils file make gcc gcc-multilib g++-multilib libsdl2-dev
      - run: sudo pip3 install west
      - run: west init zephyrproject --mr v2.2.0 && cd zephyrproject && west update && cd ..
      - run: pip3 install -r ./zephyrproject/zephyr/scripts/requirements.txt
      - run: wget https://github.com/zephyrproject-rtos/sdk-ng/releases/download/v0.11.1/zephyr-sdk-0.11.1-setup.run && chmod +x zephyr-sdk-0.11.1-setup.run && ./zephyr-sdk-0.11.1-setup.run -- -d /home/runner/work/firefly_zephyr/firefly_zephyr/zephyr-sdk-0.11.1
      - run: cd ./zephyrproject/zephyr && source zephyr-env.sh && cd ../..
      - run: west manifest --validate
      - run: west --help
      - run: west build firefly --pristine && mv ./build/zephyr/zephyr.hex firefly.hex
      - uses: actions/upload-artifact@v1
        with:
          name: firefly.hex
          path: firefly.hex
      - run: west build activator --pristine && mv ./build/zephyr/zephyr.hex activator.hex
      - uses: actions/upload-artifact@v1
        with:
          name: activator.hex
          path: activator.hex
      - run: west build smoke_test --pristine && mv ./build/zephyr/zephyr.hex smoke_test.hex
      - uses: actions/upload-artifact@v1
        with:
          name: smoke_test.hex
          path: smoke_test.hex
      - uses: ncipollo/release-action@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          artifacts: firefly.hex,activator.hex,smoke_test.hex
          bodyFile: RELEASE.md
          token: ${{ secrets.GITHUB_TOKEN }}
  hardware_test:
    runs-on: self-hosted
    needs: [build]
    if: github.ref == 'never'
    steps:
      - uses: actions/checkout@v1
      - uses: actions/download-artifact@v1
        with:
          name: smoke_test.hex
      - run: stty -F /dev/ttyACM0 115200
      - run: cat /dev/ttyACM0 > log.txt &
      - run: JLinkExe -if SWD -autoconnect 1 -speed 4000 -device nrf52 -CommanderScript smoke_test/flash.jlink
      - run: sleep 10
      - run: cat log.txt
      - run: cat log.txt | grep "PROJECT EXECUTION SUCCESSFUL"
