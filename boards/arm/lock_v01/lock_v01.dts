/dts-v1/;
#include <nordic/nrf52840_qiaa.dtsi>
#include "board-pinctrl.dtsi"

/ {
	model = "Lock v0.1 board";
	compatible = "aeremin,lock";

	chosen {
		zephyr,console = &uart0;
		zephyr,shell-uart = &uart0;
		zephyr,uart-mcumgr = &uart0;
		zephyr,bt-mon-uart = &uart0;
		zephyr,bt-c2h-uart = &uart0;
		zephyr,sram = &sram0;
		zephyr,flash = &flash0;
	};

	aliases {
		eeprom = &eeprom;
		eeprom-en = &eeprom_en;

		led-r = &pwm_led_r;
		led-g = &pwm_led_g;
		led-b = &pwm_led_b;
		led-en = &led_en;

		buzzer = &buzzer;
	};

	pwmleds {
		// Need power on 22 for being bright
		compatible = "pwm-leds";
		pwm_led_r: pwm_led_r {
			pwms = <&pwm0 0 PWM_MSEC(20) PWM_POLARITY_INVERTED>;
		};

		pwm_led_g: pwm_led_g {
			pwms = <&pwm0 1 PWM_MSEC(20) PWM_POLARITY_INVERTED>;
		};

		pwm_led_b: pwm_led_b {
			pwms = <&pwm0 2 PWM_MSEC(20) PWM_POLARITY_INVERTED>;
		};
	};

	pwmbuzzer {
		compatible = "pwm-leds";
		buzzer: buzzer {
			pwms = <&pwm1 3 PWM_MSEC(20) PWM_POLARITY_INVERTED>;
		};
	};

	power_control {
		compatible = "gpio-keys";
		led_en: led_en {
			gpios = <&gpio1 10 GPIO_ACTIVE_HIGH>;
			label = "LED voltage stabilizer";
		};

		eeprom_en: eeprom_en {
			gpios = <&gpio0 8 GPIO_ACTIVE_HIGH>;
			label = "EEPROM power";
		};

		pill_en: pill_en {
			gpios = <&gpio0 6 GPIO_ACTIVE_HIGH>;
			label = "Pill power";
		};
	};

	buttons {
		compatible = "gpio-keys";
		reed_switch: reed_switch {
			gpios = <&gpio1 11 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>;
			label = "CC1101 GD0";
		};

		button_sw1: button_sw1 {
			gpios = <&gpio0 31 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>;
			label = "First button";
		};

		button_sw2: button_sw2 {
			gpios = <&gpio0 29 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>;
			label = "Second button";
		};
	};

	expansion_header_1: expansion_header_1 {
		compatible = "arduino-header-r3";
		#gpio-cells = <2>;
		gpio-map-mask = <0xffffffff 0xffffffc0>;
		gpio-map-pass-thru = <0 0x3f>;
		gpio-map = <0 0 &gpio1 1 0>, /* 1 */
							 <1 0 &gpio1 2 0>, /* 2 */
							 <2 0 &gpio1 4 0>, /* 3 */
							 <3 0 &gpio1 6 0>, /* 4 */
							 <4 0 &gpio0 9 0>, /* 5 */
							 <5 0 &gpio0 10 0>,/* 6 */
							 <6 0 &gpio1 7 0>; /* 7 */
	};

	expansion_header_2: expansion_header_2 {
		compatible = "arduino-header-r3";
		#gpio-cells = <2>;
		gpio-map-mask = <0xffffffff 0xffffffc0>;
		gpio-map-pass-thru = <0 0x3f>;
		gpio-map = <0 0 &gpio0 14 0>, /* 1 */
							 <1 0 &gpio0 16 0>, /* 2 */
							 <2 0 &gpio0 15 0>, /* 3 */
							 <3 0 &gpio0 13 0>, /* 4 */
							 <4 0 &gpio0 17 0>, /* 5 */
							 <5 0 &gpio0 19 0>, /* 6 */
							 <6 0 &gpio0 21 0>, /* 7 */
							 <7 0 &gpio0 23 0>; /* 8 */
	};
};

&adc {
	status = "okay";
};

&gpio0 {
	status = "okay";
};

&gpio1 {
	status = "okay";
};

&gpiote {
    status = "okay";
};

&uart0 {
	status = "okay";
	compatible = "nordic,nrf-uart";
	current-speed = <115200>;
	pinctrl-0 = <&uart0_default>;
	pinctrl-names = "default";
};

// LEDs
&pwm0 {
	status = "okay";
	pinctrl-0 = <&pwm0_default>;
	pinctrl-names = "default";
};

// Buzzer
&pwm1 {
	status = "okay";
	pinctrl-0 = <&pwm1_default>;
	pinctrl-names = "default";
};

// EEPROM
// Needs power on eeprom_en
&i2c0 {
	compatible = "nordic,nrf-twi";
	status = "okay";
	pinctrl-0 = <&i2c0_default>;
	pinctrl-names = "default";
	clock-frequency = <I2C_BITRATE_FAST>;

	// Datasheet: https: //datasheet.lcsc.com/lcsc/1811151428_BL-Shanghai-Belling-BL24C256A-SFRC_C110276.pdf
	eeprom: eeprom@50 {
		compatible = "atmel,at24";
		// 1010 (type identifier code) 000 (A0-A2 pins are connected to the ground)
		reg = <0x50>;
		label = "EEPROM";
		size = <DT_SIZE_K(32)>;
		pagesize = <64>;
		address-width = <16>;
		timeout = <3>;
	};
};

&uicr {
	// NFC pins aren't connected to any kind of antenna at this board,
	// instead they are routed to H8 connector as normal GPIOs.
	nfct-pins-as-gpios;
};

&flash0 {
	/*
	 * For more information, see:
	 * http: //docs.zephyrproject.org/latest/guides/dts/index.html#flash-partitions
	 */
	partitions {
		compatible = "fixed-partitions";
		#address-cells = <1>;
		#size-cells = <1>;

		boot_partition: partition@0 {
			label = "mcuboot";
			reg = <0x00000000 0x0000C000>;
		};
		slot0_partition: partition@c000 {
			label = "image-0";
			reg = <0x0000C000 0x00067000>;
		};
		slot1_partition: partition@73000 {
			label = "image-1";
			reg = <0x00073000 0x00067000>;
		};
		scratch_partition: partition@da000 {
			label = "image-scratch";
			reg = <0x000da000 0x0001e000>;
		};

		/*
		 * The flash starting at 0x000f8000 and ending at
		 * 0x000fffff is reserved for use by the application.
		 */

		/*
		 * Storage partition will be used by FCB/LittleFS/NVS
		 * if enabled.
		 */
		storage_partition: partition@f8000 {
			label = "storage";
			reg = <0x000f8000 0x00008000>;
		};
	};
};
